{"remainingRequest":"/Users/jlwaugh/Desktop/SecretNetwork/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jlwaugh/Desktop/SecretNetwork/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jlwaugh/Desktop/SecretNetwork/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jlwaugh/Desktop/SecretNetwork/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/jlwaugh/Desktop/SecretNetwork/docs/intro/sgx.md?vue&type=template&id=151d9a42&","dependencies":[{"path":"/Users/jlwaugh/Desktop/SecretNetwork/docs/intro/sgx.md","mtime":1591972876281},{"path":"/Users/jlwaugh/Desktop/SecretNetwork/node_modules/cache-loader/dist/cjs.js","mtime":1585964527363},{"path":"/Users/jlwaugh/Desktop/SecretNetwork/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1589404795264},{"path":"/Users/jlwaugh/Desktop/SecretNetwork/node_modules/cache-loader/dist/cjs.js","mtime":1585964527363},{"path":"/Users/jlwaugh/Desktop/SecretNetwork/node_modules/vue-loader/lib/index.js","mtime":1589404795264},{"path":"/Users/jlwaugh/Desktop/SecretNetwork/node_modules/@vuepress/markdown-loader/index.js","mtime":1591730795041}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgIkNvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yIiwKICAgIHsgYXR0cnM6IHsgInNsb3Qta2V5IjogX3ZtLiRwYXJlbnQuc2xvdEtleSB9IH0sCiAgICBbCiAgICAgIF9jKCJoMSIsIHsgYXR0cnM6IHsgaWQ6ICJpbnRlbC1zZ3giIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgeyBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLCBhdHRyczogeyBocmVmOiAiI2ludGVsLXNneCIgfSB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgSW50ZWwgU0dYIikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDIiLCB7IGF0dHJzOiB7IGlkOiAib3ZlcnZpZXciIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgeyBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLCBhdHRyczogeyBocmVmOiAiI292ZXJ2aWV3IiB9IH0sCiAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiBPdmVydmlldyIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIkludGVs4oCZcyBTb2Z0d2FyZSBHdWFyZCBFeHRlbnNpb25zIChTR1gpIGFyZSBhIGZvcm0gb2YgVHJ1c3RlZCBFeGVjdXRpb24gRW52aXJvbm1lbnQgKFRFRSkgdGhhdCB0aGUgU2VjcmV0IE5ldHdvcmsgd2lsbCB1c2UuIFNHWCBjaGlwcyBhcmUgZm91bmQgaW4gbW9zdCBJbnRlbCBoYXJkd2FyZSBwcm9kdWN0cy4gRnJvbSB0aGUgcGVyc3BlY3RpdmUgb2YgdXNlcnMgYW5kIG1vc3QgYXBwbGljYXRpb24gZGV2ZWxvcGVycywgdGhlc2UgU0dYIGNoaXBzIHdvcmsgbGlrZSBibGFjayBib3hlcyBmb3IgZGF0YS4gVGhpcyBtZWFucyBubyBvbmUgLSBuZWl0aGVyIHRoZSBkZXZpY2Ugb3duZXIgbm9yIHN5c3RlbSBvcGVyYXRvciwgbm9yIGFuIG9ic2VydmVyIG9mIHRoZSBTZWNyZXQgTmV0d29yayAtIGNhbiBzZWUgd2hhdCBpcyBoYXBwZW5pbmcgaW5zaWRlIHRoYXQgbWVtb3J5IHNwYWNlLiBUaGUgU2VjcmV0IE5ldHdvcmsgY3VycmVudGx5IHVzZXMgSW50ZWwgU0dYIGVuY2xhdmVzIGJlY2F1c2UgdGhleSBwcm92aWRlIHN0cm9uZyBjcnlwdG9ncmFwaGljIGd1YXJhbnRlZXMuIgogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygKICAgICAgICAicCIsCiAgICAgICAgWwogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiRW5jbGF2ZXMgY29udGFpbiB0aGVpciBvd24gcHJpdmF0ZSBzaWduaW5nL2F0dGVzdGF0aW9uIGtleSB3aGljaCBpcyBnZW5lcmF0ZWQgd2l0aGluIHRoZSBlbmNsYXZlLiBOby1vbmUgaGFzIGFjY2VzcyB0byBpdCBvdXRzaWRlIG9mIHRoZSBlbmNsYXZlLiBJdCBmb2xsb3dzIHRoYXQgZGF0YSBjYW4gb25seSBiZSBzaWduZWQgd2l0aCB0aGlzIGtleSBhcyBwYXJ0IG9mIHRoZSBzcGVjaWZpZWQgaW5zdHJ1Y3Rpb24gc2V0IHJ1bm5pbmcgaW4gYW4gZW5jbGF2ZS4gRm9yIG1vcmUgZGV0YWlscyBvbiBrZXkgZ2VuZXJhdGlvbiBhbmQgbWFuYWdlbWVudCB3aXRoaW4gZW5jbGF2ZXMsIHNlZSBvdXIgc2VjdGlvbiBvbiAiCiAgICAgICAgICApLAogICAgICAgICAgX2MoIlJvdXRlckxpbmsiLCB7IGF0dHJzOiB7IHRvOiAiL2ludHJvL2NyeXB0b2dyYXBoeS5odG1sIiB9IH0sIFsKICAgICAgICAgICAgX3ZtLl92KCJjcnlwdG9ncmFwaHkiKQogICAgICAgICAgXSksCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICIuIEZvciBvdXIgcHVycG9zZXMsIHRoZSBhdHRlc3RhdGlvbiBrZXkgaXMgb25seSB1c2VkIG9uY2UgdXBvbiByZWdpc3RyYXRpb24uIEZvbGxvd2luZyB0aGF0IHByb2Nlc3MgbmV3IGtleXMgYXJlIHByb3Zpc2lvbmVkIHRvIHRoZSBlbmNsYXZlIGFuZCB1c2VkIHRvIGNvbW11bmljYXRlIHdpdGggdGhlIG5ldHdvcmssIGFzIGRlc2NyaWJlZCBpbiBtb3JlIGRldGFpbCBiZWxvdy4iCiAgICAgICAgICApCiAgICAgICAgXSwKICAgICAgICAxCiAgICAgICksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiRW5jbGF2ZXMgYWxzbyBnbyB0aHJvdWdoIGEgZGV0YWlsZWQgcmVnaXN0cmF0aW9uIGFuZCBhdHRlc3RhdGlvbiBwcm9jZXNzLiBTcGVjaWZpY2FsbHksIHRoZSBhdHRlc3RhdGlvbiBwcm9jZXNzIHdoaWNoIGVhY2ggdmFsaWRhdG9yIHJ1bm5pbmcgYW4gU0dYIGVuY2xhdmUgbXVzdCBnbyB0aHJvdWdoIGVuc3VyZXMgdGhlIGZvbGxvd2luZyBhc3NlcnRpb25zIHJlZ2FyZGluZyBwcml2YWN5IGFuZCBjb3JyZWN0bmVzczoiCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJ1bCIsIFsKICAgICAgICBfYygibGkiLCBbX3ZtLl92KCJ0aGUgYXBwbGljYXRpb27igJlzIGlkZW50aXR5LCIpXSksCiAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX3ZtLl92KCJpdHMgaW50YWN0bmVzcyAodGhhdCBpdCBoYXMgbm90IGJlZW4gdGFtcGVyZWQgd2l0aCksIikKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICJ0aGF0IGl0IGlzIHJ1bm5pbmcgc2VjdXJlbHkgd2l0aGluIGFuIGVuY2xhdmUgb24gYW4gSW50ZWwgU0dYIGVuYWJsZWQgcGxhdGZvcm0uIgogICAgICAgICAgKQogICAgICAgIF0pCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIkZvciBtb3JlIGRldGFpbGVkIGluZm9ybWF0aW9uIG9uIHRoZSBJbnRlbCBTR1ggcmVtb3RlIGF0dGVzdGF0aW9uIHByb2Nlc3MsIHNlZSB0aGUgYmVsb3cgc2VjdGlvbiBvbiB0aGUgYXR0ZXN0YXRpb24gcHJvY2Vzcy4iCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMiIsIHsgYXR0cnM6IHsgaWQ6ICJ3aHktc2d4IiB9IH0sIFsKICAgICAgICBfYygiYSIsIHsgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwgYXR0cnM6IHsgaHJlZjogIiN3aHktc2d4IiB9IH0sIFsKICAgICAgICAgIF92bS5fdigiIyIpCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIgV2h5IFNHWCIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIkludGVsIFNHWCBpcyBvbmUgb2YgdGhlIG1vc3Qgd2lkZWx5IGF2YWlsYWJsZSwgYW5kIHdpZGVseSB1c2VkIGltcGxlbWVudGF0aW9ucyBvZiBUcnVzdGVkIEV4ZWN1dGlvbiBFbnZpcm9ubWVudHMuIFdlIGhhdmUgc2VsZWN0ZWQgdGhpcyB0ZWNobm9sb2d5IGZvciB0aGUgaW5pdGlhbCB2ZXJzaW9uIG9mIHRoZSBTZWNyZXQgTmV0d29yayBmb3IgdHdvIG1haW4gcmVhc29uczoiCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJvbCIsIFsKICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICJVc2FiaWxpdHk6IFNHWCBpcyBtb3JlIHBlcmZvcm1hbnQgYW5kIG1vcmUgZmxleGlibGUgdGhhbiBvdGhlciBzb2x1dGlvbnMgZm9yIHByaXZhY3ktcHJlc2VydmluZyBjb21wdXRhdGlvbi4gVGhlIFNlY3JldCBOZXR3b3JrIGlzIGJ1aWxkaW5nIGEgcGxhdGZvcm0gZm9yIGRlY2VudHJhbGl6ZWQsIGdlbmVyYWwgcHVycG9zZSBwcml2YXRlIGNvbXB1dGF0aW9uLiBUaGlzIHJlcXVpcmVzIGEgcHJpdmFjeSBzb2x1dGlvbiB0aGF0IGNhbiBlbmFibGUgYSB3aWRlLXJhbmdlIG9mIHVzZSBjYXNlcy4gSXQgYWxzbyByZXF1aXJlcyBjb21wdXRhdGlvbnMgdG8gYmUgb24gcGFyLCBwZXJmb3JtYW5jZS13aXNlLCB3aXRoIG5vbi1wcml2YWN5IHByZXNlcnZpbmcgY29tcHV0YXRpb24sIHNvIHRoYXQgc3BlZWQgZG9lcyBub3QgaW50ZXJmZXJlIHdpdGggYXBwbGljYXRpb24gdXNhYmlsaXR5LiIKICAgICAgICAgICkKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICJTZWN1cml0eTogQmVjYXVzZSBTR1ggaXMgb25lIG9mIHRoZSBtb3N0IHdpZGVseSBhZG9wdGVkIHRlY2hub2xvZ2llcyBmb3IgVEVFcywgaXQgaXMgYWxzbyBiYXR0bGUtaGFyZGVuZWQuIEF0dGFja3MgYXJlIG9mdGVuIHRoZW9yZXRpY2FsLCBleGVjdXRlZCBpbiBsYWJvcmF0b3J5IHNldHRpbmdzLCBhbmQgYXJlIHJhcGlkbHkgYWRkcmVzc2VkIGJ5IEludGVsLiBNYW55IGhpZ2gtdmFsdWUgdGFyZ2V0cyBleGlzdCB3aGljaCBoYXZlIG5vdCBiZWVuIGNvbXByb21pc2VkLiBObyBwcml2YWN5IHNvbHV0aW9uIGlzIDEwMCUgc2VjdXJlLCBidXQgd2UgYmVsaWV2ZSB0aGUgc2VjdXJpdHkgZ3VhcmFudGVlcyBwcm92aWRlZCBieSBJbnRlbCBTR1ggYXJlIGFkZXF1YXRlIGZvciBhIHdpZGUgcmFuZ2Ugb2YgdXNlLWNhc2VzLiIKICAgICAgICAgICkKICAgICAgICBdKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMiIsIHsgYXR0cnM6IHsgaWQ6ICJzZ3gtdXBkYXRlcyIgfSB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIjc2d4LXVwZGF0ZXMiIH0gfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIFNHWCBVcGRhdGVzIikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiVGhlIFNlY3JldCBOZXR3b3JrIHVzZXMgdmFsaWRhdG9ycyB3aG8gYXJlIGVxdWlwcGVkIHdpdGggSW50ZWwgU0dYLiBVcG9uIHJlZ2lzdHJhdGlvbiwgdmFsaWRhdG9ycyB3aWxsIGJlIHJlcXVpcmVkIHRvIGhhdmUgdGhlIGxhdGVzdCBjb21wYXRpYmxlIHZlcnNpb24gb2YgSW50ZWwgU0dYLiBXaGVuIHNpZ25pZmljYW50IHVwZGF0ZXMgYXJlIHJlbGVhc2VkLCB0aGUgbmV0d29yayBtYXkgZW5mb3JjZSB1cGdyYWRlcyB2aWEgYSBnb3Zlcm5hbmNlIHByb3Bvc2FsIGFuZCBhY2NvbXBhbnlpbmcgU2VjcmV0IE5ldHdvcmsgY29kZSB1cGRhdGUgKGhhcmQgZm9yaykuIgogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDIiLCB7IGF0dHJzOiB7IGlkOiAicmVtb3RlLWF0dGVzdGF0aW9uIiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiNyZW1vdGUtYXR0ZXN0YXRpb24iIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiBSZW1vdGUgQXR0ZXN0YXRpb24iKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJSZW1vdGUgYXR0ZXN0YXRpb24sIGFuIGFkdmFuY2VkIGZlYXR1cmUgb2YgSW50ZWwgU0dYLCBpcyB0aGUgcHJvY2VzcyBvZiBwcm92aW5nIHRoYXQgYW4gZW5jbGF2ZSBoYXMgYmVlbiBlc3RhYmxpc2hlZCBpbiBhIHNlY3VyZSBoYXJkd2FyZSBlbnZpcm9ubWVudC4gVGhpcyBtZWFucyB0aGF0IGEgcmVtb3RlIHBhcnR5IGNhbiB2ZXJpZnkgdGhhdCB0aGUgcmlnaHQgYXBwbGljYXRpb24gaXMgcnVubmluZyBpbnNpZGUgYW4gZW5jbGF2ZSBvbiBhbiBJbnRlbCBTR1ggZW5hYmxlZCBwbGF0Zm9ybS4gUmVtb3RlIGF0dGVzdGF0aW9uIHByb3ZpZGVzIHZlcmlmaWNhdGlvbiBmb3IgdGhyZWUgdGhpbmdzOiB0aGUgYXBwbGljYXRpb27igJlzIGlkZW50aXR5LCBpdHMgaW50YWN0bmVzcyAodGhhdCBpdCBoYXMgbm90IGJlZW4gdGFtcGVyZWQgd2l0aCksIGFuZCB0aGF0IGl0IGlzIHJ1bm5pbmcgc2VjdXJlbHkgd2l0aGluIGFuIGVuY2xhdmUgb24gYW4gSW50ZWwgU0dYIGVuYWJsZWQgcGxhdGZvcm0uIEF0dGVzdGF0aW9uIGlzIG5lY2Vzc2FyeSBpbiBvcmRlciB0byBtYWtlIHJlbW90ZSBhY2Nlc3Mgc2VjdXJlLCBzaW5jZSB2ZXJ5IG9mdGVuIHRoZSBlbmNsYXZl4oCZcyBjb250ZW50cyBtYXkgaGF2ZSB0byBiZSBhY2Nlc3NlZCByZW1vdGVseSwgbm90IGZyb20gdGhlIHNhbWUgcGxhdGZvcm0gWyIKICAgICAgICApLAogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgIGhyZWY6CiAgICAgICAgICAgICAgICAiaHR0cHM6Ly9jb3Vyc2VzLmNzLnV0LmVlL01UQVQuMDcuMDIyLzIwMTdfc3ByaW5nL3VwbG9hZHMvTWFpbi9oaWllLXJlcG9ydC1zMTYtMTcucGRmIiwKICAgICAgICAgICAgICB0YXJnZXQ6ICJfYmxhbmsiLAogICAgICAgICAgICAgIHJlbDogIm5vb3BlbmVyIG5vcmVmZXJyZXIiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCIxIiksIF9jKCJPdXRib3VuZExpbmsiKV0sCiAgICAgICAgICAxCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIl0iKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJUaGUgYXR0ZXN0YXRpb24gcHJvY2VzcyBjb25zaXN0cyBvZiBzZXZlbiBzdGFnZXMsIGVuY29tcGFzc2luZyBzZXZlcmFsIGFjdG9ycywgbmFtZWx5IHRoZSBzZXJ2aWNlIHByb3ZpZGVyIChyZWZlcnJlZCB0byBhcyBhIGNoYWxsZW5nZXIpIG9uIG9uZSBwbGF0Zm9ybTsgYW5kIHRoZSBhcHBsaWNhdGlvbiwgdGhlIGFwcGxpY2F0aW9u4oCZcyBlbmNsYXZlLCB0aGUgSW50ZWwtcHJvdmlkZWQgUXVvdGluZyBFbmNsYXZlIChRRSkgYW5kIFByb3Zpc2lvbmluZyBFbmNsYXZlIChQdkUpIG9uIGFub3RoZXIgcGxhdGZvcm0uIEEgc2VwYXJhdGUgZW50aXR5IGluIHRoZSBhdHRlc3RhdGlvbiBwcm9jZXNzIGlzIEludGVsIEF0dGVzdGF0aW9uIFNlcnZpY2UgKElBUyksIHdoaWNoIGNhcnJpZXMgb3V0IHRoZSB2ZXJpZmljYXRpb24gb2YgdGhlIGVuY2xhdmUgWyIKICAgICAgICApLAogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgIGhyZWY6CiAgICAgICAgICAgICAgICAiaHR0cHM6Ly9jb3Vyc2VzLmNzLnV0LmVlL01UQVQuMDcuMDIyLzIwMTdfc3ByaW5nL3VwbG9hZHMvTWFpbi9oaWllLXJlcG9ydC1zMTYtMTcucGRmIiwKICAgICAgICAgICAgICB0YXJnZXQ6ICJfYmxhbmsiLAogICAgICAgICAgICAgIHJlbDogIm5vb3BlbmVyIG5vcmVmZXJyZXIiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCIxIiksIF9jKCJPdXRib3VuZExpbmsiKV0sCiAgICAgICAgICAxCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIl1bIiksCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgaHJlZjoKICAgICAgICAgICAgICAgICJodHRwczovL3NvZnR3YXJlLmludGVsLmNvbS9lbi11cy9hcnRpY2xlcy9pbm5vdmF0aXZlLXRlY2hub2xvZ3ktZm9yLWNwdS1iYXNlZC1hdHRlc3RhdGlvbi1hbmQtc2VhbGluZyIsCiAgICAgICAgICAgICAgdGFyZ2V0OiAiX2JsYW5rIiwKICAgICAgICAgICAgICByZWw6ICJub29wZW5lciBub3JlZmVycmVyIgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigiMiIpLCBfYygiT3V0Ym91bmRMaW5rIildLAogICAgICAgICAgMQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCJdWyIpLAogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgIGhyZWY6CiAgICAgICAgICAgICAgICAiaHR0cHM6Ly9zb2Z0d2FyZS5pbnRlbC5jb20vc2l0ZXMvZGVmYXVsdC9maWxlcy9tYW5hZ2VkL2FjLzQwLzIwMTYlMjBXVzEwJTIwc2d4JTIwcHJvdmlzaW9uaW5nJTIwYW5kJTIwYXR0ZXNhdGF0aW9uJTIwZmluYWwucGRmIiwKICAgICAgICAgICAgICB0YXJnZXQ6ICJfYmxhbmsiLAogICAgICAgICAgICAgIHJlbDogIm5vb3BlbmVyIG5vcmVmZXJyZXIiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCIzIiksIF9jKCJPdXRib3VuZExpbmsiKV0sCiAgICAgICAgICAxCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIl0uIikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiSW4gc2hvcnQsIHRoZSBzZXZlbiBzdGFnZXMgb2YgcmVtb3RlIGF0dGVzdGF0aW9uIGNvbXByaXNlIG9mIG1ha2luZyBhIHJlbW90ZSBhdHRlc3RhdGlvbiByZXF1ZXN0XG4oc3RhZ2UgMSksIHBlcmZvcm1pbmcgYSBsb2NhbCBhdHRlc3RhdGlvbiAoc3RhZ2VzIDItMyksIGNvbnZlcnRpbmcgdGhlIGxvY2FsIGF0dGVzdGF0aW9uIHRvIGEgcmVtb3RlXG5hdHRlc3RhdGlvbiAoc3RhZ2VzIDQtNSksIHJldHVybmluZyB0aGUgcmVtb3RlIGF0dGVzdGF0aW9uIHRvIHRoZSBjaGFsbGVuZ2VyIChzdGFnZSA2KSBhbmQgdmVyaWZ5aW5nXG50aGUgcmVtb3RlIGF0dGVzdGF0aW9uIChzdGFnZSA3KSBbIgogICAgICAgICksCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgaHJlZjoKICAgICAgICAgICAgICAgICJodHRwczovL2NvdXJzZXMuY3MudXQuZWUvTVRBVC4wNy4wMjIvMjAxN19zcHJpbmcvdXBsb2Fkcy9NYWluL2hpaWUtcmVwb3J0LXMxNi0xNy5wZGYiLAogICAgICAgICAgICAgIHRhcmdldDogIl9ibGFuayIsCiAgICAgICAgICAgICAgcmVsOiAibm9vcGVuZXIgbm9yZWZlcnJlciIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIjEiKSwgX2MoIk91dGJvdW5kTGluayIpXSwKICAgICAgICAgIDEKICAgICAgICApLAogICAgICAgIF92bS5fdigiXVsiKSwKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICBocmVmOgogICAgICAgICAgICAgICAgImh0dHBzOi8vc29mdHdhcmUuaW50ZWwuY29tL3NpdGVzL2RlZmF1bHQvZmlsZXMvbWFuYWdlZC9hYy80MC8yMDE2JTIwV1cxMCUyMHNneCUyMHByb3Zpc2lvbmluZyUyMGFuZCUyMGF0dGVzYXRhdGlvbiUyMGZpbmFsLnBkZiIsCiAgICAgICAgICAgICAgdGFyZ2V0OiAiX2JsYW5rIiwKICAgICAgICAgICAgICByZWw6ICJub29wZW5lciBub3JlZmVycmVyIgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigiMyIpLCBfYygiT3V0Ym91bmRMaW5rIildLAogICAgICAgICAgMQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCJdLiIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIkludGVsIFJlbW90ZSBBdHRlc3RhdGlvbiBhbHNvIGluY2x1ZGVzIHRoZSBlc3RhYmxpc2htZW50IG9mIGEgc2VjdXJlIGNvbW11bmljYXRpb24gc2Vzc2lvbiBiZXR3ZWVuIHRoZSBzZXJ2aWNlIHByb3ZpZGVyIGFuZCB0aGUgYXBwbGljYXRpb24uIFRoaXMgaXMgYW5hbG9nb3VzIHRvIGhvdyB0aGUgZmFtaWxpYXIgVExTIGhhbmRzaGFrZSBpbmNsdWRlcyBib3RoIGF1dGhlbnRpY2F0aW9uIGFuZCBzZXNzaW9uIGVzdGFibGlzaG1lbnQuIgogICAgICAgICkKICAgICAgXSkKICAgIF0KICApCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}