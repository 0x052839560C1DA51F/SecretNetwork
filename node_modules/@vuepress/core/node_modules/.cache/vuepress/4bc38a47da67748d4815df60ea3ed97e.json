{"remainingRequest":"/Users/jlwaugh/Desktop/SecretNetwork/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jlwaugh/Desktop/SecretNetwork/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jlwaugh/Desktop/SecretNetwork/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jlwaugh/Desktop/SecretNetwork/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/jlwaugh/Desktop/SecretNetwork/docs/protocol/architecture.md?vue&type=template&id=7bf8e57b&","dependencies":[{"path":"/Users/jlwaugh/Desktop/SecretNetwork/docs/protocol/architecture.md","mtime":1591978797418},{"path":"/Users/jlwaugh/Desktop/SecretNetwork/node_modules/cache-loader/dist/cjs.js","mtime":1585964527363},{"path":"/Users/jlwaugh/Desktop/SecretNetwork/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1589404795264},{"path":"/Users/jlwaugh/Desktop/SecretNetwork/node_modules/cache-loader/dist/cjs.js","mtime":1585964527363},{"path":"/Users/jlwaugh/Desktop/SecretNetwork/node_modules/vue-loader/lib/index.js","mtime":1589404795264},{"path":"/Users/jlwaugh/Desktop/SecretNetwork/node_modules/@vuepress/markdown-loader/index.js","mtime":1591730795041}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}