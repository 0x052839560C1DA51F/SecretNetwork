{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{374:function(a,s,e){\"use strict\";e.r(s);var t=e(43),r=Object(t.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":a.$parent.slotKey}},[e(\"h1\",{attrs:{id:\"secret-blockchain-light-client\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#secret-blockchain-light-client\"}},[a._v(\"#\")]),a._v(\" Secret Blockchain Light Client\")]),a._v(\" \"),e(\"h2\",{attrs:{id:\"secret-cli\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#secret-cli\"}},[a._v(\"#\")]),a._v(\" Secret CLI\")]),a._v(\" \"),e(\"p\",[e(\"code\",[a._v(\"secretcli\")]),a._v(\" is the command-line tool that enables you to interact with a node that runs on the Secret Blockchain.\")]),a._v(\" \"),e(\"p\",[e(\"RouterLink\",{attrs:{to:\"/docs/light-client-mainnet.html\"}},[a._v(\"How to install and use \"),e(\"code\",[a._v(\"secretcli\")])]),a._v(\".\")],1),a._v(\" \"),e(\"h2\",{attrs:{id:\"secretcli-guide\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#secretcli-guide\"}},[a._v(\"#\")]),a._v(\" \"),e(\"code\",[a._v(\"secretcli\")]),a._v(\" Guide\")]),a._v(\" \"),e(\"h3\",{attrs:{id:\"keys\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#keys\"}},[a._v(\"#\")]),a._v(\" Keys\")]),a._v(\" \"),e(\"h4\",{attrs:{id:\"key-types\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#key-types\"}},[a._v(\"#\")]),a._v(\" Key Types\")]),a._v(\" \"),e(\"p\",[a._v(\"There are three types of key representations that are used:\")]),a._v(\" \"),e(\"ul\",[e(\"li\",[e(\"code\",[a._v(\"secret\")]),a._v(\" \"),e(\"ul\",[e(\"li\",[a._v(\"Derived from account keys generated by \"),e(\"code\",[a._v(\"secretcli keys add\")])]),a._v(\" \"),e(\"li\",[a._v(\"Used to receive funds\")]),a._v(\" \"),e(\"li\",[a._v(\"e.g. \"),e(\"code\",[a._v(\"secret15h6vd5f0wqps26zjlwrc6chah08ryu4hzzdwhc\")])])])])]),a._v(\" \"),e(\"ul\",[e(\"li\",[e(\"code\",[a._v(\"secretvaloper\")]),a._v(\" \"),e(\"ul\",[e(\"li\",[a._v(\"Used to associate a validator to it's operator\")]),a._v(\" \"),e(\"li\",[a._v(\"Used to invoke staking commands\")]),a._v(\" \"),e(\"li\",[a._v(\"e.g. \"),e(\"code\",[a._v(\"secretvaloper1carzvgq3e6y3z5kz5y6gxp3wpy3qdrv928vyah\")])])])])]),a._v(\" \"),e(\"ul\",[e(\"li\",[e(\"code\",[a._v(\"secretpub\")]),a._v(\" \"),e(\"ul\",[e(\"li\",[a._v(\"Derived from account keys generated by \"),e(\"code\",[a._v(\"secretcli keys add\")])]),a._v(\" \"),e(\"li\",[a._v(\"e.g. \"),e(\"code\",[a._v(\"secretpub1zcjduc3q7fu03jnlu2xpl75s2nkt7krm6grh4cc5aqth73v0zwmea25wj2hsqhlqzm\")])]),a._v(\" \"),e(\"li\")])]),a._v(\" \"),e(\"li\",[e(\"code\",[a._v(\"secretvalconspub\")]),a._v(\" \"),e(\"ul\",[e(\"li\",[a._v(\"Generated when the node is created with \"),e(\"code\",[a._v(\"secretd init\")]),a._v(\".\")]),a._v(\" \"),e(\"li\",[a._v(\"Get this value with \"),e(\"code\",[a._v(\"secretd tendermint show-validator\")])]),a._v(\" \"),e(\"li\",[a._v(\"e.g. \"),e(\"code\",[a._v(\"secretvalconspub1zcjduepq0ms2738680y72v44tfyqm3c9ppduku8fs6sr73fx7m666sjztznqzp2emf\")])])])])]),a._v(\" \"),e(\"h4\",{attrs:{id:\"generate-keys\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#generate-keys\"}},[a._v(\"#\")]),a._v(\" Generate Keys\")]),a._v(\" \"),e(\"p\",[a._v(\"You'll need an account private and public key pair (a.k.a. \"),e(\"code\",[a._v(\"sk, pk\")]),a._v(\" respectively) to be able to receive funds, send txs, bond tx, etc.\")]),a._v(\" \"),e(\"p\",[a._v(\"To generate a new \"),e(\"em\",[a._v(\"secp256k1\")]),a._v(\" key:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli keys \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"add\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"key-alias\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"p\",[a._v(\"The output of the above command will contain a \"),e(\"em\",[a._v(\"seed phrase\")]),a._v(\". It is recommended to save the \"),e(\"em\",[a._v(\"seed phrase\")]),a._v(\" in a safe place so that in case you forget the password of the operating system's credentials store, you could eventually regenerate the key from the seed phrase with the following command:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli keys \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"add\")]),a._v(\" --recover\\n\")])])]),e(\"p\",[a._v(\"You can also backup your key using \"),e(\"code\",[a._v(\"export\")]),a._v(\", which outputs to \"),e(\"em\",[a._v(\"stderr\")]),a._v(\":\")]),a._v(\" \"),e(\"p\",[e(\"em\",[a._v(\"(copy and paste to a \"),e(\"code\",[a._v(\"<key-export-file>\")]),a._v(\")\")])]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli keys \"),e(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[a._v(\"export\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"key-alias\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"p\",[a._v(\"and import it with:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli keys \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"import\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"key-alias\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"key-export-file\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"p\",[a._v(\"If you check your private keys, you'll now see \"),e(\"code\",[a._v(\"<key-alias>\")]),a._v(\":\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli keys show \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"key-alias\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"p\",[a._v(\"If you want to just see your enigma address:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli keys show \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"key-alias\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" -a\\n\")])])]),e(\"p\",[a._v(\"View the validator operator's address via:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli keys show \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"key-alias\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" --bech\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),a._v(\"val\\n\")])])]),e(\"p\",[a._v(\"You can see all your available keys by typing:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli keys list\\n\")])])]),e(\"p\",[a._v(\"View the validator pubkey for your node by typing:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretd tendermint show-validator\\n\")])])]),e(\"p\",[a._v(\"Note that this is the Tendermint signing key, \"),e(\"em\",[a._v(\"not\")]),a._v(\" the operator key you will use in delegation transactions.\")]),a._v(\" \"),e(\"div\",{staticClass:\"custom-block danger\"},[e(\"p\",{staticClass:\"custom-block-title\"},[a._v(\"Warning\")]),a._v(\" \"),e(\"p\",[a._v(\"We strongly recommend \"),e(\"em\",[a._v(\"NOT\")]),a._v(\" using the same passphrase for multiple keys. The Tendermint team and the Interchain Foundation will not be responsible for the loss of funds.\")])]),a._v(\" \"),e(\"h4\",{attrs:{id:\"generate-multisig-public-keys\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#generate-multisig-public-keys\"}},[a._v(\"#\")]),a._v(\" Generate Multisig Public Keys\")]),a._v(\" \"),e(\"p\",[a._v(\"You can generate and print a multisig public key by typing:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli keys \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"add\")]),a._v(\" --multisig\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),a._v(\"name1,name2,name3\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"[\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"..\")]),a._v(\".\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"]\")]),a._v(\" --multisig-threshold\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),a._v(\"K \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"new-key-alias\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"p\",[e(\"code\",[a._v(\"K\")]),a._v(\" is the minimum number of private keys that must have signed the\\ntransactions that carry the public key's address as signer.\")]),a._v(\" \"),e(\"p\",[a._v(\"The \"),e(\"code\",[a._v(\"--multisig\")]),a._v(\" flag must contain the name of public keys that will be combined into a\\npublic key that will be generated and stored as \"),e(\"code\",[a._v(\"new-key-alias\")]),a._v(\" in the local database.\\nAll names supplied through \"),e(\"code\",[a._v(\"--multisig\")]),a._v(\" must already exist in the local database. Unless\\nthe flag \"),e(\"code\",[a._v(\"--nosort\")]),a._v(\" is set, the order in which the keys are supplied on the command line\\ndoes not matter, i.e. the following commands generate two identical keys:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli keys \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"add\")]),a._v(\" --multisig\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),a._v(\"foo,bar,baz --multisig-threshold\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"2\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"multisig-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\nsecretcli keys \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"add\")]),a._v(\" --multisig\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),a._v(\"baz,foo,bar --multisig-threshold\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"2\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"multisig-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"p\",[a._v(\"Multisig addresses can also be generated on-the-fly and printed through the which command:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli keys show --multisig-threshold K name1 name2 name3 \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"[\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"..\")]),a._v(\".\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"]\")]),a._v(\"\\n\")])])]),e(\"p\",[a._v(\"For more information regarding how to generate, sign and broadcast transactions with a multi-signature account see \"),e(\"a\",{attrs:{href:\"#multisig-transactions\"}},[a._v(\"Multisig Transactions\")]),a._v(\".\")]),a._v(\" \"),e(\"h3\",{attrs:{id:\"tx-broadcasting\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#tx-broadcasting\"}},[a._v(\"#\")]),a._v(\" Tx Broadcasting\")]),a._v(\" \"),e(\"p\",[a._v(\"When broadcasting transactions, \"),e(\"code\",[a._v(\"secretcli\")]),a._v(\" accepts a \"),e(\"code\",[a._v(\"--broadcast-mode\")]),a._v(\" flag. This\\nflag can have a value of \"),e(\"code\",[a._v(\"sync\")]),a._v(\" (default), \"),e(\"code\",[a._v(\"async\")]),a._v(\", or \"),e(\"code\",[a._v(\"block\")]),a._v(\", where \"),e(\"code\",[a._v(\"sync\")]),a._v(\" makes\\nthe client return a CheckTx response, \"),e(\"code\",[a._v(\"async\")]),a._v(\" makes the client return immediately,\\nand \"),e(\"code\",[a._v(\"block\")]),a._v(\" makes the client wait for the tx to be committed (or timing out).\")]),a._v(\" \"),e(\"p\",[a._v(\"It is important to note that the \"),e(\"code\",[a._v(\"block\")]),a._v(\" mode should \"),e(\"strong\",[a._v(\"not\")]),a._v(\" be used in most\\ncircumstances. This is because broadcasting can timeout but the tx may still be\\nincluded in a block. This can result in many undesirable situations. Therefore, it\\nis best to use \"),e(\"code\",[a._v(\"sync\")]),a._v(\" or \"),e(\"code\",[a._v(\"async\")]),a._v(\" and query by tx hash to determine when the tx\\nis included in a block.\")]),a._v(\" \"),e(\"h3\",{attrs:{id:\"fees-gas\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#fees-gas\"}},[a._v(\"#\")]),a._v(\" Fees & Gas\")]),a._v(\" \"),e(\"p\",[a._v(\"Each transaction may either supply fees or gas prices, but not both.\")]),a._v(\" \"),e(\"p\",[a._v(\"Validator's have a minimum gas price (multi-denom) configuration and they use\\nthis value when when determining if they should include the transaction in a block during \"),e(\"code\",[a._v(\"CheckTx\")]),a._v(\", where \"),e(\"code\",[a._v(\"gasPrices >= minGasPrices\")]),a._v(\". Note, your transaction must supply fees that are greater than or equal to \"),e(\"strong\",[a._v(\"any\")]),a._v(\" of the denominations the validator requires.\")]),a._v(\" \"),e(\"p\",[e(\"strong\",[a._v(\"Note\")]),a._v(\": With such a mechanism in place, validators may start to prioritize\\ntxs by \"),e(\"code\",[a._v(\"gasPrice\")]),a._v(\" in the mempool, so providing higher fees or gas prices may yield higher tx priority.\")]),a._v(\" \"),e(\"p\",[a._v(\"e.g.\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli tx send \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"..\")]),a._v(\". --fees\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),a._v(\"50000uscrt\\n\")])])]),e(\"p\",[a._v(\"or\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli tx send \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"..\")]),a._v(\". --gas-prices\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"0\")]),a._v(\".025uscrt\\n\")])])]),e(\"h3\",{attrs:{id:\"account\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#account\"}},[a._v(\"#\")]),a._v(\" Account\")]),a._v(\" \"),e(\"h4\",{attrs:{id:\"get-tokens\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#get-tokens\"}},[a._v(\"#\")]),a._v(\" Get Tokens\")]),a._v(\" \"),e(\"p\",[a._v(\"On a testnet, getting tokens is usually done via a faucet.\")]),a._v(\" \"),e(\"h4\",{attrs:{id:\"query-account-balance\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#query-account-balance\"}},[a._v(\"#\")]),a._v(\" Query Account Balance\")]),a._v(\" \"),e(\"p\",[a._v(\"After receiving tokens to your address, you can view your account's balance by typing:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q account \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"enigma-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"p\",[a._v(\"Get your \"),e(\"code\",[a._v(\"<enigma-address>\")]),a._v(\" using:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli keys show -a \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"key-alias\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"p\",[a._v(\"(the \"),e(\"em\",[a._v(\"-a\")]),a._v(\" flag is used to display the address only)\")]),a._v(\" \"),e(\"p\",[a._v(\"Optionally, you can supply your address within the command as:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q account \"),e(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[e(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[a._v(\"$(\")]),a._v(\"secretcli keys show -a \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"key-alias\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),e(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[a._v(\")\")])]),a._v(\"\\n\")])])]),e(\"div\",{staticClass:\"custom-block warning\"},[e(\"p\",{staticClass:\"custom-block-title\"},[a._v(\"Note\")]),a._v(\" \"),e(\"p\",[a._v(\"When you query an account balance with zero tokens, you will get this error: \"),e(\"code\",[a._v(\"No account with address <enigma-address> was found in the state.\")]),a._v(\" This can also happen if you fund the account before your node has fully synced with the chain. These are both normal.\")]),a._v(\" \"),e(\"h3\",{attrs:{id:\"send-tokens\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#send-tokens\"}},[a._v(\"#\")]),a._v(\" Send Tokens\")]),a._v(\" \"),e(\"p\",[a._v(\"The following command could be used to send coins from one account to another:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli tx send \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"sender-key-alias-or-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"recipient-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" 10uscrt \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n\\t--memo \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"tx-memo\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n\\t--chain-id\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"chain-id\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"div\",{staticClass:\"custom-block warning\"},[e(\"p\",{staticClass:\"custom-block-title\"},[a._v(\"Note\")]),a._v(\" \"),e(\"p\",[a._v(\"The \"),e(\"code\",[a._v(\"amount\")]),a._v(\" argument accepts the format \"),e(\"code\",[a._v(\"<value|coin_name>\")]),a._v(\".\")])])]),a._v(\" \"),e(\"div\",{staticClass:\"custom-block tip\"},[e(\"p\",{staticClass:\"custom-block-title\"},[a._v(\"Note\")]),a._v(\" \"),e(\"p\",[a._v(\"You may want to cap the maximum gas that can be consumed by the transaction via the \"),e(\"code\",[a._v(\"--gas\")]),a._v(\" flag.\")]),a._v(\" \"),e(\"p\",[a._v(\"If you pass \"),e(\"code\",[a._v(\"--gas=auto\")]),a._v(\", the gas supply will be automatically estimated before executing the transaction.\")]),a._v(\" \"),e(\"p\",[a._v(\"Gas estimate might be inaccurate as state changes could occur in between the end of the simulation and the actual execution of a transaction, thus an adjustment is applied on top of the original estimate in order to ensure the transaction is broadcasted successfully. The adjustment can be controlled via the \"),e(\"code\",[a._v(\"--gas-adjustment\")]),a._v(\" flag, whose default value is 1.0.\")])]),a._v(\" \"),e(\"p\",[a._v(\"Now, view the updated balances of the origin and destination accounts:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q account \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"enigma-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\nsecretcli q account \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"recipient-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"p\",[a._v(\"You can also check your balance at a given block by using the \"),e(\"code\",[a._v(\"--block\")]),a._v(\" flag:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q account \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"enigma-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" --block\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"block_height\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"p\",[a._v(\"You can simulate a transaction without actually broadcasting it by appending the\\n\"),e(\"code\",[a._v(\"--dry-run\")]),a._v(\" flag to the command line:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli tx send \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"sender-key-alias-or-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"recipient-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" 10uscrt \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  --chain-id\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"chain-id\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  --dry-run\\n\")])])]),e(\"p\",[a._v(\"Furthermore, you can build a transaction and print its JSON format to STDOUT by\\nappending \"),e(\"code\",[a._v(\"--generate-only\")]),a._v(\" to the list of the command line arguments:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli tx send \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"sender-key-alias-or-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"recipient-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" 10uscrt \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  --chain-id\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"chain-id\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  --generate-only \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" unsignedSendTx.json\\n\")])])]),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli tx sign \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  --chain-id\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"chain-id\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  --from\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"key-alias\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  unsignedSendTx.json \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" signedSendTx.json\\n\")])])]),e(\"div\",{staticClass:\"custom-block tip\"},[e(\"p\",{staticClass:\"custom-block-title\"},[a._v(\"Note\")]),a._v(\" \"),e(\"p\",[a._v(\"The \"),e(\"code\",[a._v(\"--generate-only\")]),a._v(\" flag prevents \"),e(\"code\",[a._v(\"secretcli\")]),a._v(\" from accessing the local keybase.\\nThus when such flag is supplied \"),e(\"code\",[a._v(\"<sender-key-alias-or-address>\")]),a._v(\" must be an address.\")])]),a._v(\" \"),e(\"p\",[a._v(\"You can validate the transaction's signatures by typing the following:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli tx sign --validate-signatures signedSendTx.json\\n\")])])]),e(\"p\",[a._v(\"You can broadcast the signed transaction to a node by providing the JSON file to the following command:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli tx broadcast --node\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"node\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" signedSendTx.json\\n\")])])]),e(\"h3\",{attrs:{id:\"query-transactions\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#query-transactions\"}},[a._v(\"#\")]),a._v(\" Query Transactions\")]),a._v(\" \"),e(\"h4\",{attrs:{id:\"matching-a-set-of-events\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#matching-a-set-of-events\"}},[a._v(\"#\")]),a._v(\" Matching a Set of Events\")]),a._v(\" \"),e(\"p\",[a._v(\"You can use the transaction search command to query for transactions that match a specific set of \"),e(\"code\",[a._v(\"events\")]),a._v(\", which are added on every transaction.\")]),a._v(\" \"),e(\"p\",[a._v(\"Each event is composed by a key-value pair in the form of \"),e(\"code\",[a._v(\"{eventType}.{eventAttribute}={value}\")]),a._v(\".\")]),a._v(\" \"),e(\"p\",[a._v(\"Events can also be combined to query for a more specific result using the \"),e(\"code\",[a._v(\"&\")]),a._v(\" symbol.\")]),a._v(\" \"),e(\"p\",[a._v(\"You can query transactions by \"),e(\"code\",[a._v(\"events\")]),a._v(\" as follows:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q txs --events\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[a._v(\"'message.sender=secret1...'\")]),a._v(\"\\n\")])])]),e(\"p\",[a._v(\"And for using multiple \"),e(\"code\",[a._v(\"events\")]),a._v(\":\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q txs --events\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[a._v(\"'message.sender=secret1...&message.action=withdraw_delegator_reward'\")]),a._v(\"\\n\")])])]),e(\"p\",[a._v(\"The pagination is supported as well via \"),e(\"code\",[a._v(\"page\")]),a._v(\" and \"),e(\"code\",[a._v(\"limit\")]),a._v(\":\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q txs --events\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[a._v(\"'message.sender=secret1...'\")]),a._v(\" --page\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"1\")]),a._v(\" --limit\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"20\")]),a._v(\"\\n\")])])]),e(\"div\",{staticClass:\"custom-block tip\"},[e(\"p\",{staticClass:\"custom-block-title\"},[a._v(\"Note\")]),a._v(\" \"),e(\"p\",[a._v(\"The action tag always equals the message type returned by the \"),e(\"code\",[a._v(\"Type()\")]),a._v(\" function of the relevant message.\")]),a._v(\" \"),e(\"p\",[a._v(\"You can find a list of available \"),e(\"code\",[a._v(\"events\")]),a._v(\" on each of the SDK modules:\")]),a._v(\" \"),e(\"ul\",[e(\"li\",[e(\"a\",{attrs:{href:\"https://github.com/cosmos/cosmos-sdk/blob/master/x/staking/spec/07_events.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[a._v(\"Staking events\"),e(\"OutboundLink\")],1)]),a._v(\" \"),e(\"li\",[e(\"a\",{attrs:{href:\"https://github.com/cosmos/cosmos-sdk/blob/master/x/gov/spec/04_events.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[a._v(\"Governance events\"),e(\"OutboundLink\")],1)]),a._v(\" \"),e(\"li\",[e(\"a\",{attrs:{href:\"https://github.com/cosmos/cosmos-sdk/blob/master/x/slashing/spec/06_events.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[a._v(\"Slashing events\"),e(\"OutboundLink\")],1)]),a._v(\" \"),e(\"li\",[e(\"a\",{attrs:{href:\"https://github.com/cosmos/cosmos-sdk/blob/master/x/distribution/spec/06_events.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[a._v(\"Distribution events\"),e(\"OutboundLink\")],1)]),a._v(\" \"),e(\"li\",[e(\"a\",{attrs:{href:\"https://github.com/cosmos/cosmos-sdk/blob/master/x/bank/spec/04_events.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[a._v(\"Bank events\"),e(\"OutboundLink\")],1)])])]),a._v(\" \"),e(\"h4\",{attrs:{id:\"matching-a-transaction-s-hash\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#matching-a-transaction-s-hash\"}},[a._v(\"#\")]),a._v(\" Matching a Transaction's Hash\")]),a._v(\" \"),e(\"p\",[a._v(\"You can also query a single transaction by its hash using the following command:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q tx \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"[\")]),a._v(\"hash\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"]\")]),a._v(\"\\n\")])])]),e(\"h3\",{attrs:{id:\"slashing\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#slashing\"}},[a._v(\"#\")]),a._v(\" Slashing\")]),a._v(\" \"),e(\"h4\",{attrs:{id:\"unjailing\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#unjailing\"}},[a._v(\"#\")]),a._v(\" Unjailing\")]),a._v(\" \"),e(\"p\",[a._v(\"To unjail your jailed validator\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli tx slashing unjail --from \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"key-alias\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"h4\",{attrs:{id:\"signing-info\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#signing-info\"}},[a._v(\"#\")]),a._v(\" Signing Info\")]),a._v(\" \"),e(\"p\",[a._v(\"To retrieve a validator's signing info:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q slashing signing-info \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"validator-conspub-key\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"h4\",{attrs:{id:\"query-parameters\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#query-parameters\"}},[a._v(\"#\")]),a._v(\" Query Parameters\")]),a._v(\" \"),e(\"p\",[a._v(\"You can get the current slashing parameters via:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q slashing params\\n\")])])]),e(\"h3\",{attrs:{id:\"minting\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#minting\"}},[a._v(\"#\")]),a._v(\" Minting\")]),a._v(\" \"),e(\"p\",[a._v(\"You can query for the minting/inflation parameters via:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q mint params\\n\")])])]),e(\"p\",[a._v(\"To query for the current inflation value:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q mint inflation\\n\")])])]),e(\"p\",[a._v(\"To query for the current annual provisions value:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q mint annual-provisions\\n\")])])]),e(\"h3\",{attrs:{id:\"staking\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#staking\"}},[a._v(\"#\")]),a._v(\" Staking\")]),a._v(\" \"),e(\"h4\",{attrs:{id:\"set-up-a-validator\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#set-up-a-validator\"}},[a._v(\"#\")]),a._v(\" Set up a Validator\")]),a._v(\" \"),e(\"p\",[a._v(\"Please refer to \"),e(\"RouterLink\",{attrs:{to:\"/docs/validators-and-full-nodes/join-validator-mainnet.html\"}},[a._v(\"How to join mainnet as a validator\")]),a._v(\" for a complete guide on how to set up a validator-candidate.\")],1),a._v(\" \"),e(\"p\",[a._v(\"Use the following commands to:\")]),a._v(\" \"),e(\"ul\",[e(\"li\",[a._v(\"rename your validator (moniker)\")]),a._v(\" \"),e(\"li\",[a._v(\"see your rewards and commissions from delegators\")]),a._v(\" \"),e(\"li\",[a._v(\"withdraw rewards and/or commissions\")])]),a._v(\" \"),e(\"h5\",{attrs:{id:\"renaming-your-moniker\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#renaming-your-moniker\"}},[a._v(\"#\")]),a._v(\" Renaming your moniker\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli tx staking edit-validator --moniker \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"new-moniker\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" --from \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"key-alias\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"h5\",{attrs:{id:\"changing-your-commission-rate\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#changing-your-commission-rate\"}},[a._v(\"#\")]),a._v(\" Changing your commission rate\")]),a._v(\" \"),e(\"p\",[a._v(\"Example 0.075 = 7.5%\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli tx staking edit-validator --commission-rate \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"0.075\")]),a._v(\" --from \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"key-alias\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"h5\",{attrs:{id:\"seeing-your-rewards-from-being-a-validator\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#seeing-your-rewards-from-being-a-validator\"}},[a._v(\"#\")]),a._v(\" Seeing your rewards from being a validator\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q distribution rewards \"),e(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[e(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[a._v(\"$(\")]),a._v(\"secretcli keys show -a \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"key-alias\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),e(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[a._v(\")\")])]),a._v(\"\\n\")])])]),e(\"h5\",{attrs:{id:\"seeing-your-commissions-from-your-delegators\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#seeing-your-commissions-from-your-delegators\"}},[a._v(\"#\")]),a._v(\" Seeing your commissions from your delegators\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q distribution commission \"),e(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[e(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[a._v(\"$(\")]),a._v(\"secretcli keys show -a \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"key-alias\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" --bech\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),a._v(\"val\"),e(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[a._v(\")\")])]),a._v(\"\\n\")])])]),e(\"h5\",{attrs:{id:\"withdrawing-rewards\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#withdrawing-rewards\"}},[a._v(\"#\")]),a._v(\" Withdrawing rewards\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli tx distribution withdraw-rewards \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n\\t\"),e(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[e(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[a._v(\"$(\")]),a._v(\"secretcli keys show --bech\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),a._v(\"val -a \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"key-alias\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),e(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[a._v(\")\")])]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n\\t--from \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"key-alias\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"h5\",{attrs:{id:\"withdrawing-rewards-commissions\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#withdrawing-rewards-commissions\"}},[a._v(\"#\")]),a._v(\" Withdrawing rewards+commissions\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli tx distribution withdraw-rewards \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n\\t\"),e(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[e(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[a._v(\"$(\")]),a._v(\"secretcli keys show --bech\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),a._v(\"val -a \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"key-alias\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),e(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[a._v(\")\")])]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n\\t--from \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"key-alias\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n\\t--commission\\n\")])])]),e(\"h4\",{attrs:{id:\"delegate-to-a-validator\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#delegate-to-a-validator\"}},[a._v(\"#\")]),a._v(\" Delegate to a Validator\")]),a._v(\" \"),e(\"p\",[a._v(\"On mainnet, you can delegate \"),e(\"code\",[a._v(\"uscrt\")]),a._v(\" to a validator. These delegators can receive part of the validator's fee revenue. Read more about the \"),e(\"a\",{attrs:{href:\"https://github.com/cosmos/cosmos/raw/master/Cosmos_Token_Model.pdf\",target:\"_blank\",rel:\"noopener noreferrer\"}},[a._v(\"Cosmos Token Model\"),e(\"OutboundLink\")],1),a._v(\".\")]),a._v(\" \"),e(\"h5\",{attrs:{id:\"query-validators\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#query-validators\"}},[a._v(\"#\")]),a._v(\" Query Validators\")]),a._v(\" \"),e(\"p\",[a._v(\"You can query the list of all validators of a specific chain:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q staking validators\\n\")])])]),e(\"p\",[a._v(\"If you want to get the information of a single validator you can check it with:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q staking validator \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"validator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"h5\",{attrs:{id:\"bond-tokens\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#bond-tokens\"}},[a._v(\"#\")]),a._v(\" Bond Tokens\")]),a._v(\" \"),e(\"p\",[a._v(\"On the Secret Network, we delegate \"),e(\"code\",[a._v(\"uscrt\")]),a._v(\", where \"),e(\"code\",[a._v(\"1scrt = 1000000uscrt\")]),a._v(\". Here's how you can bond tokens to a validator (\"),e(\"em\",[a._v(\"i.e.\")]),a._v(\" delegate):\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli tx staking delegate \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n\\t\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"validator-operator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\\t\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"amount\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n\\t--from\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"key-alias\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"p\",[a._v(\"Example:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[a._v(\"secretcli tx staking delegate \\\\\\n\\tenigmavaloper1l2rsakp388kuv9k8qzq6lrm9taddae7fpx59wm \\\\\\n\\t1000uscrt \\\\\\n\\t--from <key-alias>\\n\")])])]),e(\"p\",[e(\"code\",[a._v(\"<validator-operator-address>\")]),a._v(\" is the operator address of the validator to which you intend to delegate. If you are running a full node, you can find this with:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli keys show \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"key-alias\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" --bech val\\n\")])])]),e(\"p\",[a._v(\"where \"),e(\"code\",[a._v(\"<key-alias>\")]),a._v(\" is the name of the key you specified when you initialized \"),e(\"code\",[a._v(\"secretd\")]),a._v(\".\")]),a._v(\" \"),e(\"p\",[a._v(\"While tokens are bonded, they are pooled with all the other bonded tokens in the network. Validators and delegators obtain a percentage of shares that equal their stake in this pool.\")]),a._v(\" \"),e(\"h5\",{attrs:{id:\"withdraw-rewards\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#withdraw-rewards\"}},[a._v(\"#\")]),a._v(\" Withdraw Rewards\")]),a._v(\" \"),e(\"p\",[a._v(\"To withdraw the delegator rewards:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli tx distribution withdraw-rewards \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"validator-operator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" --from \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"key-alias\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"h5\",{attrs:{id:\"query-delegations\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#query-delegations\"}},[a._v(\"#\")]),a._v(\" Query Delegations\")]),a._v(\" \"),e(\"p\",[a._v(\"Once you've submitted a delegation to a validator, you can see it's information by using the following command:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q staking delegation \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"delegator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"validator-operator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"p\",[a._v(\"Example:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q staking delegation \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n\\tsecret1gghjut3ccd8ay0zduzj64hwre2fxs9ld75ru9p \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n\\tsecretvaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\\n\")])])]),e(\"p\",[a._v(\"Or if you want to check all your current delegations with distinct validators:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q staking delegations \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"delegator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"h5\",{attrs:{id:\"unbond-tokens\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#unbond-tokens\"}},[a._v(\"#\")]),a._v(\" Unbond Tokens\")]),a._v(\" \"),e(\"p\",[a._v(\"If for any reason the validator misbehaves, or you just want to unbond a certain\\namount of tokens, use this following command.\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli tx staking unbond \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"validator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  10uscrt \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  --from\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"key-alias\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  --chain-id\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"chain-id\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"p\",[a._v(\"The unbonding will be automatically completed when the unbonding period has passed.\")]),a._v(\" \"),e(\"h5\",{attrs:{id:\"query-unbonding-delegations\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#query-unbonding-delegations\"}},[a._v(\"#\")]),a._v(\" Query Unbonding-Delegations\")]),a._v(\" \"),e(\"p\",[a._v(\"Once you begin an unbonding-delegation, you can see it's information by using the following command:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q staking unbonding-delegation \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"delegator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"validator-operator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"p\",[a._v(\"Or if you want to check all your current unbonding-delegations with distinct validators:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q staking unbonding-delegations \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"delegator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"p\",[a._v(\"Additionally, you can get all the unbonding-delegations from a particular validator:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q staking unbonding-delegations-from \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"validator-operator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"h5\",{attrs:{id:\"redelegate-tokens\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#redelegate-tokens\"}},[a._v(\"#\")]),a._v(\" Redelegate Tokens\")]),a._v(\" \"),e(\"p\",[a._v(\"A redelegation is a type delegation that allows you to bond illiquid tokens from one validator to another:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli tx staking redelegate \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"src-validator-operator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"dst-validator-operator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  10uscrt \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  --from\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"key-alias\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  --chain-id\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"chain-id\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"p\",[a._v(\"Here you can also redelegate a specific \"),e(\"code\",[a._v(\"shares-amount\")]),a._v(\" or a \"),e(\"code\",[a._v(\"shares-fraction\")]),a._v(\" with the corresponding flags.\")]),a._v(\" \"),e(\"p\",[a._v(\"The redelegation will be automatically completed when the unbonding period has passed.\")]),a._v(\" \"),e(\"h5\",{attrs:{id:\"query-redelegations\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#query-redelegations\"}},[a._v(\"#\")]),a._v(\" Query Redelegations\")]),a._v(\" \"),e(\"p\",[a._v(\"Once you begin an redelegation, you can see it's information by using the following command:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q staking redelegation \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"delegator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"src-valoper-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"dst-valoper-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"p\",[a._v(\"Or if you want to check all your current unbonding-delegations with distinct validators:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q staking redelegations \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"delegator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"p\",[a._v(\"Additionally, you can get all the outgoing redelegations from a particular validator:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"  secretcli q staking redelegations-from \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"validator-operator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"h5\",{attrs:{id:\"query-parameters-2\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#query-parameters-2\"}},[a._v(\"#\")]),a._v(\" Query Parameters\")]),a._v(\" \"),e(\"p\",[a._v(\"Parameters define high level settings for staking. You can get the current values by using:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q staking params\\n\")])])]),e(\"p\",[a._v(\"With the above command you will get the values for:\")]),a._v(\" \"),e(\"ul\",[e(\"li\",[a._v(\"Unbonding time\")]),a._v(\" \"),e(\"li\",[a._v(\"Maximum numbers of validators\")]),a._v(\" \"),e(\"li\",[a._v(\"Coin denomination for staking\")])]),a._v(\" \"),e(\"p\",[a._v(\"Example:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"$ secretcli q staking params\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"{\")]),a._v(\"\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[a._v('\"unbonding_time\"')]),e(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[a._v(\":\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[a._v('\"1814400000000000\"')]),a._v(\",\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[a._v('\"max_validators\"')]),e(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[a._v(\":\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"50\")]),a._v(\",\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[a._v('\"max_entries\"')]),e(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[a._v(\":\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"7\")]),a._v(\",\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[a._v('\"historical_entries\"')]),e(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[a._v(\":\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"0\")]),a._v(\",\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[a._v('\"bond_denom\"')]),e(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[a._v(\":\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[a._v('\"uscrt\"')]),a._v(\"\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"}\")]),a._v(\"\\n\")])])]),e(\"p\",[a._v(\"All these values will be subject to updates though a \"),e(\"code\",[a._v(\"governance\")]),a._v(\" process by \"),e(\"code\",[a._v(\"ParameterChange\")]),a._v(\" proposals.\")]),a._v(\" \"),e(\"h5\",{attrs:{id:\"query-pool\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#query-pool\"}},[a._v(\"#\")]),a._v(\" Query Pool\")]),a._v(\" \"),e(\"p\",[a._v(\"A staking \"),e(\"code\",[a._v(\"Pool\")]),a._v(\" defines the dynamic parameters of the current state. You can query them with the following command:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q staking pool\\n\")])])]),e(\"p\",[a._v(\"With the \"),e(\"code\",[a._v(\"pool\")]),a._v(\" command you will get the values for:\")]),a._v(\" \"),e(\"ul\",[e(\"li\",[a._v(\"Not-bonded and bonded tokens\")]),a._v(\" \"),e(\"li\",[a._v(\"Token supply\")]),a._v(\" \"),e(\"li\",[a._v(\"Current annual inflation and the block in which the last inflation was processed\")]),a._v(\" \"),e(\"li\",[a._v(\"Last recorded bonded shares\")])]),a._v(\" \"),e(\"h5\",{attrs:{id:\"query-delegations-to-validator\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#query-delegations-to-validator\"}},[a._v(\"#\")]),a._v(\" Query Delegations To Validator\")]),a._v(\" \"),e(\"p\",[a._v(\"You can also query all of the delegations to a particular validator:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"  secretcli q staking delegations-to \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"validator-operator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"p\",[a._v(\"Example:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"$ secretcli q staking delegations-to enigmavaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\\n\\n\")])])]),e(\"h3\",{attrs:{id:\"nodes\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#nodes\"}},[a._v(\"#\")]),a._v(\" Nodes\")]),a._v(\" \"),e(\"p\",[a._v(\"If you are running a full node or a validator node, view the status by typing:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli status\\n\")])])]),e(\"p\",[e(\"RouterLink\",{attrs:{to:\"/docs/validators-and-full-nodes/run-full-node-mainnet.html\"}},[a._v(\"How to run a full node on mainnet\")]),a._v(\".\")],1),a._v(\" \"),e(\"h3\",{attrs:{id:\"governance\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#governance\"}},[a._v(\"#\")]),a._v(\" Governance\")]),a._v(\" \"),e(\"p\",[a._v(\"Governance is the process by which users in the Secret Blockchain can come to consensus on software upgrades, parameters of the mainnet or signals through text proposals. This is done through voting on proposals, which will be submitted by \"),e(\"code\",[a._v(\"SCRT\")]),a._v(\" holders on the mainnet.\")]),a._v(\" \"),e(\"p\",[e(\"RouterLink\",{attrs:{to:\"/docs/using-governance.html\"}},[a._v(\"How to participate in on-chain governance\")]),a._v(\".\")],1),a._v(\" \"),e(\"h3\",{attrs:{id:\"fee-distribution\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#fee-distribution\"}},[a._v(\"#\")]),a._v(\" Fee Distribution\")]),a._v(\" \"),e(\"h4\",{attrs:{id:\"query-distribution-parameters\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#query-distribution-parameters\"}},[a._v(\"#\")]),a._v(\" Query Distribution Parameters\")]),a._v(\" \"),e(\"p\",[a._v(\"To check the current distribution parameters, run:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q distribution params\\n\")])])]),e(\"h4\",{attrs:{id:\"query-distribution-community-pool\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#query-distribution-community-pool\"}},[a._v(\"#\")]),a._v(\" Query distribution Community Pool\")]),a._v(\" \"),e(\"p\",[a._v(\"To query all coins in the community pool which is under Governance control:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q distribution community-pool\\n\")])])]),e(\"h4\",{attrs:{id:\"query-outstanding-validator-rewards\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#query-outstanding-validator-rewards\"}},[a._v(\"#\")]),a._v(\" Query Outstanding Validator rewards\")]),a._v(\" \"),e(\"p\",[a._v(\"To check the current outstanding (un-withdrawn) rewards, run:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q distribution validator-outstanding-rewards \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"validator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"h4\",{attrs:{id:\"query-validator-commission\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#query-validator-commission\"}},[a._v(\"#\")]),a._v(\" Query Validator Commission\")]),a._v(\" \"),e(\"p\",[a._v(\"To check the current outstanding commission for a validator, run:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q distribution commission \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"validator-operator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"h4\",{attrs:{id:\"query-validator-slashes\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#query-validator-slashes\"}},[a._v(\"#\")]),a._v(\" Query Validator Slashes\")]),a._v(\" \"),e(\"p\",[a._v(\"To check historical slashes for a validator, run:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q distribution slashes \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"validator-operator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"start-height\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"end-height\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"h4\",{attrs:{id:\"query-delegator-rewards\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#query-delegator-rewards\"}},[a._v(\"#\")]),a._v(\" Query Delegator Rewards\")]),a._v(\" \"),e(\"p\",[a._v(\"To check current rewards for a delegation (were they to be withdrawn), run:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q distribution rewards \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"delegator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"validator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"h4\",{attrs:{id:\"query-all-delegator-rewards\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#query-all-delegator-rewards\"}},[a._v(\"#\")]),a._v(\" Query All Delegator Rewards\")]),a._v(\" \"),e(\"p\",[a._v(\"To check all current rewards for a delegation (were they to be withdrawn), run:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli q distribution rewards \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"delegator-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\"\\n\")])])]),e(\"h3\",{attrs:{id:\"multisig-transactions\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#multisig-transactions\"}},[a._v(\"#\")]),a._v(\" Multisig Transactions\")]),a._v(\" \"),e(\"p\",[a._v(\"Multisig transactions require signatures of multiple private keys. Thus, generating and signing a transaction from a multisig account involve cooperation among the parties involved. A multisig transaction can be initiated by any of the key holders, and at least one of them would need to import other parties' public keys into their Keybase and generate a multisig public key in order to finalize and broadcast the transaction.\")]),a._v(\" \"),e(\"p\",[a._v(\"For example, given a multisig key comprising the keys \"),e(\"code\",[a._v(\"p1\")]),a._v(\", \"),e(\"code\",[a._v(\"p2\")]),a._v(\", and \"),e(\"code\",[a._v(\"p3\")]),a._v(\", each of which is held by a distinct party, the user holding \"),e(\"code\",[a._v(\"p1\")]),a._v(\" would require to import both \"),e(\"code\",[a._v(\"p2\")]),a._v(\" and \"),e(\"code\",[a._v(\"p3\")]),a._v(\" in order to generate the multisig account public key:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli keys \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"add\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  p2 \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  --pubkey\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),a._v(\"secretpub1addwnpepqtd28uwa0yxtwal5223qqr5aqf5y57tc7kk7z8qd4zplrdlk5ez5kdnlrj4\\n\\nsecretcli keys \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"add\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  p3 \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  --pubkey\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),a._v(\"secretpub1addwnpepqgj04jpm9wrdml5qnss9kjxkmxzywuklnkj0g3a3f8l5wx9z4ennz84ym5t\\n\\nsecretcli keys \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"add\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  p1p2p3 \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  --multisig-threshold\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"2\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  --multisig\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),a._v(\"p1,p2,p3\\n\")])])]),e(\"p\",[a._v(\"A new multisig public key \"),e(\"code\",[a._v(\"p1p2p3\")]),a._v(\" has been stored, and its address will be\\nused as signer of multisig transactions:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli keys show p1p2p3 -a\\n\")])])]),e(\"p\",[a._v(\"You may also view multisig threshold, pubkey constituents and respective weights\\nby viewing the JSON output of the key or passing the \"),e(\"code\",[a._v(\"--show-multisig\")]),a._v(\" flag:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli keys show p1p2p3 -o json\\n\\nsecretcli keys show p1p2p3 --show-multisig\\n\")])])]),e(\"p\",[a._v(\"The first step to create a multisig transaction is to initiate it on behalf\\nof the multisig address created above:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli tx send secret1570v2fq3twt0f0x02vhxpuzc9jc4yl30q2qned 1000000uscrt \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  --from\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"multisig-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  --generate-only \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" unsignedTx.json\\n\")])])]),e(\"p\",[a._v(\"The file \"),e(\"code\",[a._v(\"unsignedTx.json\")]),a._v(\" contains the unsigned transaction encoded in JSON.\\n\"),e(\"code\",[a._v(\"p1\")]),a._v(\" can now sign the transaction with its own private key:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli tx sign \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  unsignedTx.json \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  --multisig\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"multisig-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  --from\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),a._v(\"p1 \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  --output-document\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),a._v(\"p1signature.json\\n\")])])]),e(\"p\",[a._v(\"Once the signature is generated, \"),e(\"code\",[a._v(\"p1\")]),a._v(\" transmits both \"),e(\"code\",[a._v(\"unsignedTx.json\")]),a._v(\" and\\n\"),e(\"code\",[a._v(\"p1signature.json\")]),a._v(\" to \"),e(\"code\",[a._v(\"p2\")]),a._v(\" or \"),e(\"code\",[a._v(\"p3\")]),a._v(\", which in turn will generate their\\nrespective signature:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli tx sign \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  unsignedTx.json \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  --multisig\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"<\")]),a._v(\"multisig-address\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  --from\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),a._v(\"p2 \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  --output-document\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),a._v(\"p2signature.json\\n\")])])]),e(\"p\",[e(\"code\",[a._v(\"p1p2p3\")]),a._v(\" is a 2-of-3 multisig key, therefore one additional signature\\nis sufficient. Any the key holders can now generate the multisig\\ntransaction by combining the required signature files:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli tx multisign \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  unsignedTx.json \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  p1p2p3 \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"\\\\\")]),a._v(\"\\n  p1signature.json p2signature.json \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" signedTx.json\\n\")])])]),e(\"p\",[a._v(\"The transaction can now be sent to the node:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretcli tx broadcast signedTx.json\\n\")])])]),e(\"h2\",{attrs:{id:\"shells-completion-scripts\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#shells-completion-scripts\"}},[a._v(\"#\")]),a._v(\" Shells Completion Scripts\")]),a._v(\" \"),e(\"p\",[a._v(\"Completion scripts for popular UNIX shell interpreters such as \"),e(\"code\",[a._v(\"Bash\")]),a._v(\" and \"),e(\"code\",[a._v(\"Zsh\")]),a._v(\"\\ncan be generated through the \"),e(\"code\",[a._v(\"completion\")]),a._v(\" command, which is available for both\\n\"),e(\"code\",[a._v(\"secretd\")]),a._v(\" and \"),e(\"code\",[a._v(\"secretcli\")]),a._v(\".\")]),a._v(\" \"),e(\"p\",[a._v(\"If you want to generate \"),e(\"code\",[a._v(\"Bash\")]),a._v(\" completion scripts run the following command:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretd completion \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" secretd_completion\\nsecretcli completion \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" secretcli_completion\\n\")])])]),e(\"p\",[a._v(\"If you want to generate \"),e(\"code\",[a._v(\"Zsh\")]),a._v(\" completion scripts run the following command:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[a._v(\"secretd completion --zsh \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" secretd_completion\\nsecretcli completion --zsh \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">\")]),a._v(\" secretcli_completion\\n\")])])]),e(\"div\",{staticClass:\"custom-block tip\"},[e(\"p\",{staticClass:\"custom-block-title\"},[a._v(\"Note\")]),a._v(\" \"),e(\"p\",[a._v(\"On most UNIX systems, such scripts may be loaded in \"),e(\"code\",[a._v(\".bashrc\")]),a._v(\" or\\n\"),e(\"code\",[a._v(\".bash_profile\")]),a._v(\" to enable Bash autocompletion:\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[a._v(\"echo\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[a._v(\"'. secretd_completion'\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">>\")]),a._v(\" ~/.bashrc\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[a._v(\"echo\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[a._v(\"'. secretcli_completion'\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\">>\")]),a._v(\" ~/.bashrc\\n\")])])]),e(\"p\",[a._v(\"Refer to the user's manual of your interpreter provided by your\\noperating system for information on how to enable shell autocompletion.\")])])])}),[],!1,null,null,null);s.default=r.exports}}]);","extractedComments":[]}